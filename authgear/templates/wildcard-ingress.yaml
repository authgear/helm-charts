{{- if .Values.authgear.ingress.enabled }}

{{- range $index, $defaultDomain := .Values.authgear.allDefaultDomains }}

{{- if $defaultDomain.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $defaultDomain.domain | quote }}
  annotations:
    kubernetes.io/ingress.class: {{ $.Values.authgear.ingress.class | quote }}
    {{- with $.Values.authgear.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with $defaultDomain.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "authgear.labels" $ | nindent 4 }}
spec:
  {{- if $defaultDomain.ingress.tls.enabled }}
  tls:
  - secretName: {{ $defaultDomain.secretName | quote }}
    hosts:
    - {{ printf "*.%s" $defaultDomain.domain | quote }}
  {{- end }}
  rules:
  - host: {{ printf "*.%s" $defaultDomain.domain | quote }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ include "authgear.nameMain" $ | quote }}
            port:
              name: http
      - path: /_api/admin
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ include "authgear.nameAdmin" $ | quote }}
            port:
              name: http
      - path: /_resolver
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ include "authgear.nameResolver" $ | quote }}
            port:
              name: http
      - path: /_images
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ include "authgear.nameImages" $ | quote }}
            port:
              name: http
{{- end }}

{{- if $.Values.authgear.certManager.enabled }}
{{- if $defaultDomain.certManager.enabled }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $defaultDomain.domain | quote }}
  labels:
    {{- include "authgear.labels" $ | nindent 4 }}
spec:
  secretName: {{ $defaultDomain.secretName | quote }}
  dnsNames:
  - {{ printf "*.%s" $defaultDomain.domain | quote }}
  - {{ $defaultDomain.domain | quote }}
{{- if $defaultDomain.certManager.issuer }}
  issuerRef:
    name: {{ $defaultDomain.certManager.issuer.name | quote }}
    kind: {{ $defaultDomain.certManager.issuer.kind | quote }}
    group: {{ $defaultDomain.certManager.issuer.group | quote }}
{{- else }}
  issuerRef:
    name: {{ $.Values.authgear.certManager.issuer.dns01.name | quote }}
    kind: {{ $.Values.authgear.certManager.issuer.dns01.kind | quote }}
    group: {{ $.Values.authgear.certManager.issuer.dns01.group | quote }}
{{- end }}
{{- end }}
{{- end }}

{{- end }}

{{- end }}
