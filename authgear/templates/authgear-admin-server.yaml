apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authgear.nameAdmin" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.authgear.adminServer.replicas }}
  selector:
    matchLabels:
      {{- include "authgear.adminSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authgear.adminSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "authgear.nameMain" . | quote }}
      volumes:
      {{- if .Values.authgear.appCustomResources.path }}
      - name: custom-resources
        {{- toYaml .Values.authgear.appCustomResources.volume | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.extraVolumes }}
      {{- toYaml .Values.authgear.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.authgear.adminServer.nodeSelector }}
      nodeSelector:
        {{- .Values.authgear.adminServer.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.adminServer.nodeName }}
      nodeName: {{ .Values.authgear.adminServer.nodeName | quote }}
      {{- end }}
      {{- if .Values.authgear.adminServer.affinity }}
      affinity:
        {{- .Values.authgear.adminServer.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.adminServer.tolerations }}
      tolerations:
      {{- .Values.authgear.adminServer.tolerations | toYaml | nindent 6 }}
      {{- end }}
      {{- if .Values.authgear.adminServer.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- .Values.authgear.adminServer.topologySpreadConstraints | toYaml | nindent 6 }}
      {{- end }}
      containers:
      - name: authgear-admin-server
        image: {{ .Values.authgear.mainServer.image | quote }}
        imagePullPolicy: Always
        args: ["authgear", "start", "admin"]
        volumeMounts:
        {{- if .Values.authgear.appCustomResources.path }}
        - name: custom-resources
          mountPath: {{ .Values.authgear.appCustomResources.path | quote }}
        {{- end }}
        {{- if .Values.authgear.extraVolumeMounts }}
        {{- toYaml .Values.authgear.extraVolumeMounts | nindent 8 }}
        {{- end }}
        env:
        - name: DATABASE_URL
          value: {{ .Values.authgear.databaseURL | quote }}
        - name: DATABASE_SCHEMA
          value: {{ .Values.authgear.databaseSchema | quote }}
        - name: REDIS_URL
          value: {{ .Values.authgear.redisURL | quote }}
        - name: DENO_ENDPOINT
          value: {{ printf "http://%s" (include "authgear.nameDeno" .) | quote }}
        - name: TRUST_PROXY
          value: {{ .Values.authgear.trustProxy | quote }}
        - name: CORS_ALLOWED_ORIGINS
          value: {{ include "authgear.portalHost" . | quote }}
        {{- if .Values.authgear.imagesServer.cdn.host }}
        - name: IMAGES_CDN_HOST
          value: {{ .Values.authgear.imagesServer.cdn.host | quote }}
        {{- end }}
        {{- if .Values.authgear.userexport.objectStore.type }}
        - name: USEREXPORT_OBJECT_STORE_TYPE
          value: {{ .Values.authgear.userexport.objectStore.type | quote }}
        {{- if eq .Values.authgear.userexport.objectStore.type "AWS_S3" }}
        - name: USEREXPORT_OBJECT_STORE_AWS_S3_REGION
          value: {{ .Values.authgear.userexport.objectStore.awsS3.region | quote }}
        - name: USEREXPORT_OBJECT_STORE_AWS_S3_BUCKET_NAME
          value: {{ .Values.authgear.userexport.objectStore.awsS3.bucketName | quote }}
        - name: USEREXPORT_OBJECT_STORE_AWS_S3_ACCESS_KEY_ID
          value: {{ .Values.authgear.userexport.objectStore.awsS3.accessKeyID | quote }}
        - name: USEREXPORT_OBJECT_STORE_AWS_S3_SECRET_ACCESS_KEY
          value: {{ .Values.authgear.userexport.objectStore.awsS3.secretAccessKey | quote }}
        {{- end }}
        {{- if eq .Values.authgear.userexport.objectStore.type "GCP_GCS" }}
        - name: USEREXPORT_OBJECT_STORE_GCP_GCS_BUCKET_NAME
          value: {{ .Values.authgear.userexport.objectStore.gcpGCS.bucketName | quote }}
        - name: USEREXPORT_OBJECT_STORE_GCP_GCS_SERVICE_ACCOUNT
          value: {{ .Values.authgear.userexport.objectStore.gcpGCS.serviceAccount | quote }}
        {{- end }}
        {{- if eq .Values.authgear.userexport.objectStore.type "AZURE_BLOB_STORAGE" }}
        - name: USEREXPORT_OBJECT_STORE_AZURE_BLOB_STORAGE_STORAGE_ACCOUNT
          value: {{ .Values.authgear.userexport.objectStore.azureBlobStorage.storageAccount | quote }}
        - name: USEREXPORT_OBJECT_STORE_AZURE_BLOB_STORAGE_CONTAINER
          value: {{ .Values.authgear.userexport.objectStore.azureBlobStorage.container | quote }}
        - name: USEREXPORT_OBJECT_STORE_AZURE_BLOB_STORAGE_ACCESS_KEY
          value: {{ .Values.authgear.userexport.objectStore.azureBlobStorage.accessKey | quote }}
        {{- end }}
        {{- end }}
        - name: LOG_LEVEL
          value: {{ .Values.authgear.logLevel | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.authgear.sentryDSN | quote }}
        - name: CONFIG_SOURCE_TYPE
          value: {{ .Values.authgear.configSourceType | quote }}
        - name: CONFIG_SOURCE_KUBE_NAMESPACE
          value: {{ .Values.authgear.appNamespace | quote }}
        - name: CUSTOM_RESOURCE_DIRECTORY
          value: {{ .Values.authgear.appCustomResources.path | quote }}
        {{- if .Values.authgear.allDefaultDomains }}
        {{- $suffixes := list }}
        {{- range $index, $defaultDomain := .Values.authgear.allDefaultDomains }}
        {{- $suffixes = append $suffixes (printf ".%s" $defaultDomain.domain) }}
        {{- end }}
        {{- if .Values.authgear.saml.idpEntityIDTemplate }}
        - name: SAML_IDP_ENTITY_ID_TEMPLATE
          value: {{ .Values.authgear.saml.idpEntityIDTemplate | quote }}
        {{- end }}
        - name: APP_HOST_SUFFIXES
          value: {{ join "," $suffixes | quote }}
        {{- end }}
        {{- range $key, $val := .Values.authgear.mainServer.env }}
        - name: {{ $key | quote }}
          value: {{ $val | quote }}
        {{- end }}
        ports:
        - name: http
          containerPort: 3002
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.authgear.adminServer.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.authgear.adminServer.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.authgear.adminServer.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.nameAdmin" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "authgear.adminSelectorLabels" . | nindent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.nameAdmin" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  type: ExternalName
  externalName: {{ include "authgear.nameAdmin" . }}.{{ .Release.Namespace }}.svc.cluster.local
  ports:
  - port: 80
{{- if .Values.authgear.adminServer.hpa.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "authgear.nameAdmin" . | quote }}
spec:
  minReplicas: {{ .Values.authgear.adminServer.replicas }}
  maxReplicas: {{ .Values.authgear.adminServer.hpa.maxReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "authgear.nameAdmin" . | quote }}
  metrics:
    {{- toYaml .Values.authgear.adminServer.hpa.metrics | nindent 4 }}
{{- end }}
