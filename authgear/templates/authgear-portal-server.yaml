apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  namespace: {{ .Values.authgear.appNamespace | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ include "authgear.namePortal" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: Role
  name: {{ include "authgear.namePortal" . | quote }}
  apiGroup: rbac.authorization.k8s.io
{{- if (eq .Values.authgear.portalServer.authgear.webSDKSessionType "cookie") }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        server_tokens off;
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;

        server {
            server_name _;
            listen 80;

            location / {
                proxy_pass http://localhost:3003;
                proxy_set_header Host $http_host;

                auth_request /_auth;

                auth_request_set $x_authgear_session_valid $upstream_http_x_authgear_session_valid;
                auth_request_set $x_authgear_user_id $upstream_http_x_authgear_user_id;
                auth_request_set $x_authgear_user_anonymous $upstream_http_x_authgear_user_anonymous;
                auth_request_set $x_authgear_user_verified $upstream_http_x_authgear_user_verified;
                auth_request_set $x_authgear_session_acr $upstream_http_x_authgear_session_acr;
                auth_request_set $x_authgear_session_amr $upstream_http_x_authgear_session_amr;
                auth_request_set $x_authgear_session_authenticated_at $upstream_http_x_authgear_session_authenticated_at;
                auth_request_set $x_authgear_user_can_reauthenticate $upstream_http_x_authgear_user_can_reauthenticate;

                proxy_set_header x-authgear-session-valid $x_authgear_session_valid;
                proxy_set_header x-authgear-user-id $x_authgear_user_id;
                proxy_set_header x-authgear-user-anonymous $x_authgear_user_anonymous;
                proxy_set_header x-authgear-user-verified $x_authgear_user_verified;
                proxy_set_header x-authgear-session-acr $x_authgear_session_acr;
                proxy_set_header x-authgear-session-amr $x_authgear_session_amr;
                proxy_set_header x-authgear-session-authenticated-at $x_authgear_session_authenticated_at;
                proxy_set_header x-authgear-user-can-reauthenticate $x_authgear_user_can_reauthenticate;
            }

            location = /_auth {
                internal;
                proxy_pass http://{{ include "authgear.nameResolver" . }}.{{ .Release.Namespace }}.svc.cluster.local/resolve;
                proxy_pass_request_body off;
                {{ $authgearHost := .Values.authgear.portalServer.authgear.endpoint | trimPrefix "http://" | trimPrefix "https://" }}
                proxy_set_header Host {{ $authgearHost | quote }};
                proxy_set_header X-Forwarded-Host {{ $authgearHost | quote }};
                proxy_set_header Content-Length "";
            }
        }
    }
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.authgear.portalServer.replicas }}
  selector:
    matchLabels:
      {{- include "authgear.portalSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authgear.portalSelectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "authgear.namePortal" . | quote }}
      volumes:
      {{- if (eq .Values.authgear.portalServer.authgear.webSDKSessionType "cookie") }}
      - name: volume-nginx-conf
        configMap:
          name: {{ include "authgear.namePortal" . | quote }}
      {{- end }}
      - name: volume-ingress-template
        configMap:
          name: {{ include "authgear.nameIngressTemplate" . | quote }}
          items:
          - key: ingress.tpl.yaml
            path: ingress.tpl.yaml
      {{- if .Values.authgear.appCustomResources.path }}
      - name: app-custom-resources
        {{- toYaml .Values.authgear.appCustomResources.volume | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.portalCustomResources.path }}
      - name: portal-custom-resources
        {{- toYaml .Values.authgear.portalCustomResources.volume | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.extraVolumes }}
      {{- toYaml .Values.authgear.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.authgear.portalServer.nodeSelector }}
      nodeSelector:
        {{- .Values.authgear.portalServer.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.portalServer.nodeName }}
      nodeName: {{ .Values.authgear.portalServer.nodeName | quote }}
      {{- end }}
      {{- if .Values.authgear.portalServer.affinity }}
      affinity:
        {{- .Values.authgear.portalServer.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.authgear.portalServer.tolerations }}
      tolerations:
      {{- .Values.authgear.portalServer.tolerations | toYaml | nindent 6 }}
      {{- end }}
      {{- if .Values.authgear.portalServer.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- .Values.authgear.portalServer.topologySpreadConstraints | toYaml | nindent 6 }}
      {{- end }}
      containers:
      {{- if (eq .Values.authgear.portalServer.authgear.webSDKSessionType "cookie") }}
      - name: authgear-portal-server-proxy
        image: {{ .Values.authgear.portalServerProxy.image | quote }}
        imagePullPolicy: Always
        volumeMounts:
        - name: volume-nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        ports:
        - name: proxy
          containerPort: 80
          protocol: TCP
      {{- end }}
      - name: authgear-portal-server
        image: {{ .Values.authgear.portalServer.image | quote }}
        imagePullPolicy: Always
        volumeMounts:
        - name: volume-ingress-template
          mountPath: /app/configmap/ingress-template
        {{- if .Values.authgear.appCustomResources.path }}
        - name: app-custom-resources
          mountPath: {{ .Values.authgear.appCustomResources.path | quote }}
        {{- end }}
        {{- if .Values.authgear.portalCustomResources.path }}
        - name: portal-custom-resources
          mountPath: {{ .Values.authgear.portalCustomResources.path | quote }}
        {{- end }}
        {{- if .Values.authgear.extraVolumeMounts }}
        {{- toYaml .Values.authgear.extraVolumeMounts | nindent 8 }}
        {{- end }}
        env:
        - name: DATABASE_URL
          value: {{ .Values.authgear.databaseURL | quote }}
        - name: DATABASE_SCHEMA
          value: {{ .Values.authgear.databaseSchema | quote }}
        - name: REDIS_URL
          value: {{ .Values.authgear.redisURL | quote }}
        - name: DENO_ENDPOINT
          value: {{ printf "http://%s" (include "authgear.nameDeno" .) | quote }}
        - name: TRUST_PROXY
          value: {{ .Values.authgear.trustProxy | quote }}
        - name: STRIPE_SECRET_KEY
          value: {{ .Values.authgear.stripe.secretKey | quote }}
        - name: STRIPE_WEBHOOK_SIGNING_KEY
          value: {{ .Values.authgear.stripe.webhookSigningKey | quote }}
        - name: CORS_ALLOWED_ORIGINS
          value: {{ include "authgear.portalHost" . | quote }}
        {{- if .Values.authgear.imagesServer.cdn.host }}
        - name: IMAGES_CDN_HOST
          value: {{ .Values.authgear.imagesServer.cdn.host | quote }}
        {{- end }}
        - name: LOG_LEVEL
          value: {{ .Values.authgear.logLevel | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.authgear.sentryDSN | quote }}
        - name: PORTAL_FRONTEND_SENTRY_DSN
          value: {{ .Values.authgear.portalSentryDSN | quote }}
        - name: CONFIG_SOURCE_TYPE
          value: {{ .Values.authgear.configSourceType | quote }}
        - name: CONFIG_SOURCE_KUBE_NAMESPACE
          value: {{ .Values.authgear.appNamespace | quote }}
        - name: APP_CUSTOM_RESOURCE_DIRECTORY
          value: {{ .Values.authgear.appCustomResources.path | quote }}
        - name: PORTAL_CUSTOM_RESOURCE_DIRECTORY
          value: {{ .Values.authgear.portalCustomResources.path | quote }}
        - name: APP_KUBERNETES_INGRESS_TEMPLATE_FILE
          value: /app/configmap/ingress-template/ingress.tpl.yaml
        - name: AUTHGEAR_APP_ID
          value: {{ .Values.authgear.portalServer.authgear.appID | quote }}
        - name: AUTHGEAR_CLIENT_ID
          value: {{ .Values.authgear.portalServer.authgear.clientID | quote }}
        - name: AUTHGEAR_ENDPOINT
          value: {{ .Values.authgear.portalServer.authgear.endpoint | quote }}
        - name: AUTHGEAR_WEB_SDK_SESSION_TYPE
          value: {{ .Values.authgear.portalServer.authgear.webSDKSessionType | quote }}
        - name: ADMIN_API_ENDPOINT
          value: {{ .Values.authgear.portalServer.adminAPI.endpoint | quote }}
        - name: ADMIN_API_HOST_TEMPLATE
          value: {{ printf "%s.%s" "{{ .AppID }}" .Values.authgear.defaultDomain | quote }}
        {{- if .Values.authgear.saml.idpEntityIDTemplate }}
        - name: SAML_IDP_ENTITY_ID_TEMPLATE
          value: {{ .Values.authgear.saml.idpEntityIDTemplate | quote }}
        {{- end }}
        - name: APP_HOST_SUFFIX
          value: {{ printf ".%s" .Values.authgear.defaultDomain | quote }}
        {{- if .Values.authgear.allDefaultDomains }}
        {{- $suffixes := list }}
        {{- range $index, $defaultDomain := .Values.authgear.allDefaultDomains }}
        {{- $suffixes = append $suffixes (printf ".%s" $defaultDomain.domain) }}
        {{- end }}
        - name: APP_HOST_SUFFIXES
          value: {{ join "," $suffixes | quote }}
        {{- end }}
        - name: KUBERNETES_APP_NAMESPACE
          value: {{ .Values.authgear.appNamespace | quote }}
        {{- if .Values.authgear.elasticsearch.enabled }}
        - name: SEARCH_ENABLED
          value: "true"
        {{- end }}
        {{- if .Values.authgear.auditLog.enabled }}
        - name: AUDIT_LOG_ENABLED
          value: "true"
        {{- end }}
        {{- if .Values.authgear.portalServer.customDomain.enabled }}
        - name: DOMAIN_IMPLEMENTATION
          value: kubernetes
        {{- end }}
        {{- if .Values.authgear.analytic.enabled }}
        - name: ANALYTIC_ENABLED
          value: "true"
        - name: AUDIT_DATABASE_URL
          value: {{ .Values.authgear.auditLog.databaseURL | quote }}
        - name: AUDIT_DATABASE_SCHEMA
          value: {{ .Values.authgear.auditLog.databaseSchema | quote }}
        {{- end }}
        {{- if .Values.authgear.analytic.epoch }}
        - name: ANALYTIC_EPOCH
          value: {{ .Values.authgear.analytic.epoch | quote }}
        {{- end }}
        {{- if .Values.authgear.analytic.posthog.endpoint }}
        - name: ANALYTIC_POSTHOG_ENDPOINT
          value: {{ .Values.authgear.analytic.posthog.endpoint | quote }}
        - name: ANALYTIC_POSTHOG_APIKEY
          value: {{ .Values.authgear.analytic.posthog.apiKey | quote }}
        {{- end }}
        {{- if .Values.authgear.postgresqlsearch.enabled }}
        - name: SEARCH_DATABASE_URL
          value: {{ .Values.authgear.postgresqlsearch.databaseURL | quote }}
        - name: SEARCH_DATABASE_SCHEMA
          value: {{ .Values.authgear.postgresqlsearch.databaseSchema | quote }}
        {{- end }}
        {{- if not .Values.authgear.portalServer.env.SMTP_HOST  }}
        - name: SMTP_HOST
          value: {{ .Values.authgear.smtp.host | quote }}
        {{- end  }}
        {{- if not .Values.authgear.portalServer.env.SMTP_PORT  }}
        - name: SMTP_PORT
          value: {{ .Values.authgear.smtp.port | quote }}
        {{- end  }}
        {{- if not .Values.authgear.portalServer.env.SMTP_MODE  }}
        - name: SMTP_MODE
          value: {{ .Values.authgear.smtp.mode | quote }}
        {{- end  }}
        {{- if not .Values.authgear.portalServer.env.SMTP_USERNAME }}{{ if .Values.authgear.smtp.username  }}
        - name: SMTP_USERNAME
          value: {{ .Values.authgear.smtp.username | quote }}
        {{- end }}{{ end  }}
        {{- if not .Values.authgear.portalServer.env.SMTP_PASSWORD }}{{ if .Values.authgear.smtp.password  }}
        - name: SMTP_PASSWORD
          value: {{ .Values.authgear.smtp.password | quote }}
        {{- end }}{{ end }}
        {{- if not .Values.authgear.portalServer.env.MAIL_SENDER }}{{ if .Values.authgear.portalServer.email.sender }}
        - name: MAIL_SENDER
          value: {{ .Values.authgear.portalServer.email.sender | quote }}
        {{- end }}{{ end }}
        {{- if not .Values.authgear.portalServer.env.MAIL_REPLY_TO }}{{ if .Values.authgear.portalServer.email.replyTo }}
        - name: MAIL_REPLY_TO
          value: {{ .Values.authgear.portalServer.email.replyTo | quote }}
        {{- end }}{{ end }}
        {{- range $key, $val := .Values.authgear.portalServer.env }}
        - name: {{ $key | quote }}
          value: {{ $val | quote }}
        {{- end }}
        ports:
        - name: portal
          containerPort: 3003
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.authgear.portalServer.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.authgear.portalServer.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.authgear.portalServer.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
  labels:
    {{- include "authgear.labels" . | nindent 4 }}
spec:
  ports:
{{- if (eq .Values.authgear.portalServer.authgear.webSDKSessionType "cookie") }}
  - port: 80
    targetPort: proxy
    protocol: TCP
    name: http
{{- else }}
  - port: 80
    targetPort: portal
    protocol: TCP
    name: http
{{- end }}
  selector:
    {{- include "authgear.portalSelectorLabels" . | nindent 4 }}
{{- if .Values.authgear.portalServer.pdb.enabled}}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
spec:
  selector:
    matchLabels:
      {{- include "authgear.portalSelectorLabels" . | nindent 6 }}
  {{- if .Values.authgear.portalServer.pdb.unhealthyPodEvictionPolicy }}
  unhealthyPodEvictionPolicy: {{ .Values.authgear.portalServer.pdb.unhealthyPodEvictionPolicy | quote }}
  {{- end }}
  {{- if .Values.authgear.portalServer.pdb.minAvailable }}
  minAvailable: {{ .Values.authgear.portalServer.pdb.minAvailable }}
  {{- else if .Values.authgear.portalServer.pdb.maxUnavailable }}
  maxUnavailable: {{ .Values.authgear.portalServer.pdb.maxUnavailable }}
  {{- else }}
  {{ fail ".Values.authgear.portalServer.pdb has invalid configuration" }}
  {{- end }}
{{- end }}
{{- if .Values.authgear.portalServer.hpa.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "authgear.namePortal" . | quote }}
spec:
  minReplicas: {{ .Values.authgear.portalServer.replicas }}
  maxReplicas: {{ .Values.authgear.portalServer.hpa.maxReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "authgear.namePortal" . | quote }}
  metrics:
    {{- toYaml .Values.authgear.portalServer.hpa.metrics | nindent 4 }}
{{- end }}
